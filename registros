diff --git a/registros b/registros
index f1bab1f0b3ee4937e458d68e97facbd64b0764ae..c7ae0f96d80f00863cd682f594c56189047d5da7 100644
--- a/registros
+++ b/registros
@@ -342,38 +342,107 @@
                 currentUserName: 'Utilizador Desconhecido',
             };
 
             // --- SELETORES DE DOM ---
             const dom = {};
             const allIds = [
                 'initial-mapping-screen', 'timeline-container', 'calendar-container', 'active-filters-container',
                 'loading-indicator', 'mapping-form', 'categoria-select', 'responsavel-select', 'servico-select',
                 'show-timeline-btn', 'initial-filters-error', 'filter-tags', 'timeline-change-filters-btn',
                 'change-filters-btn', 'view-calendar-btn', 'show-timeline-view-btn', 'timeline-list', 'calendar-grid',
                 'month-year-title', 'prev-month-btn', 'next-month-btn', 'today-btn', 'theme-toggle-btn', 'theme-icon',
                 'calendar-loading-overlay', 'calendar-legend', 'days-of-week', 'month-view', 'year-view', 'year-grid',
                 'prev-year-chunk-btn', 'next-year-chunk-btn', 'actions-modal', 'cancel-modal-btn', 'apply-modal-btn',
                 'imbativel-section', 'imbativel-checkbox', 'sem-ocorrencia-radio', 'rca-radio', 'rca-option-container',
                 'rca-wizard-modal', 'rca-form', 'rca-error-summary', 'rca-step-indicator', 'rca-prev-btn', 'rca-next-btn',
                 'rca-save-btn', 'rca-cancel-btn', 'rca-critico-toggle', 'rca-servico-critico-section',
                 'rca-servico-critico', 'rca-impacto', 'rca-racional', 'rca-inicio-date', 'rca-fim-date', 'rca-inicio-time',
                 'rca-fim-time', 'rca-problema-num', 'rca-incidente-num', 'rca-problema-desc', 'rca-causa', 'rca-resolucao',
                 'toast-notification', 'toast-message', 'toast-icon'
             ];
             allIds.forEach(id => {
                 const camelCaseId = id.replace(/-./g, char => char[1].toUpperCase());
                 dom[camelCaseId] = document.getElementById(id);
             });
 
-            // --- FUNÇÕES PRINCIPAIS E LÓGICA DA APP ---
-            // (Todas as funções auxiliares e a lógica principal da aplicação vão aqui)
+            // --- FUNÇÕES AUXILIARES ---
 
-            // ... (O restante do código JavaScript que já está funcional será colocado aqui,
-            // garantindo que as variáveis e funções estejam no escopo correto) ...
+            function applyTheme(theme) {
+                if (theme === 'dark') {
+                    document.documentElement.classList.add('dark');
+                } else {
+                    document.documentElement.classList.remove('dark');
+                }
+                localStorage.setItem('calendarTheme', theme);
+                updateThemeIcon();
+            }
+
+            function updateThemeIcon() {
+                const isDark = document.documentElement.classList.contains('dark');
+                dom.themeIcon.setAttribute('data-lucide', isDark ? 'moon' : 'sun');
+                lucide.createIcons();
+            }
+
+            function updateTitle() {
+                const month = state.currentDate.getMonth();
+                const year = state.currentDate.getFullYear();
+                dom.monthYearTitle.textContent = `${MONTH_NAMES[month]} ${year}`;
+            }
+
+            function renderCalendar() {
+                dom.calendarGrid.innerHTML = '';
+                const year = state.currentDate.getFullYear();
+                const month = state.currentDate.getMonth();
+
+                const firstDay = new Date(year, month, 1);
+                const startDay = new Date(firstDay);
+                startDay.setDate(startDay.getDate() - firstDay.getDay());
+
+                for (let i = 0; i < 42; i++) {
+                    const day = new Date(startDay);
+                    day.setDate(startDay.getDate() + i);
+
+                    const cell = document.createElement('div');
+                    cell.className = 'h-12 flex items-center justify-center rounded-lg text-sm';
+                    cell.textContent = day.getDate();
+                    if (day.getMonth() !== month) {
+                        cell.classList.add('text-gray-400');
+                    }
+                    dom.calendarGrid.appendChild(cell);
+                }
+                updateTitle();
+            }
+
+            function navigateMonth(offset) {
+                state.currentDate.setMonth(state.currentDate.getMonth() + offset);
+                renderCalendar();
+            }
+
+            // --- FUNÇÃO PRINCIPAL ---
+
+            function main() {
+                const savedTheme = localStorage.getItem('calendarTheme') || 'light';
+                applyTheme(savedTheme);
+
+                renderCalendar();
+
+                dom.prevMonthBtn.addEventListener('click', () => navigateMonth(-1));
+                dom.nextMonthBtn.addEventListener('click', () => navigateMonth(1));
+                dom.todayBtn.addEventListener('click', () => {
+                    state.currentDate = new Date();
+                    renderCalendar();
+                });
+                dom.themeToggleBtn.addEventListener('click', () => {
+                    const isDark = document.documentElement.classList.contains('dark');
+                    applyTheme(isDark ? 'light' : 'dark');
+                });
+
+                console.log('Aplicação inicializada');
+            }
 
             // --- PONTO DE ENTRADA ---
             lucide.createIcons();
             main();
         });
     </script>
 </body>
 </html>
